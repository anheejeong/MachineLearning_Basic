# -*- coding: utf-8 -*-
"""fisrt-machineLearning-program.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oBMXqnVP5bE3ZHE-VXkhGQnFbUtyluX8

<h2>첫번째 머신러닝 프로그램</h2>
<h3><b>도미 빙어 예측 머신러닝</b></h3>

1. 도미 데이터
"""

import matplotlib.pyplot as plt

bream_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.0, 31.0, 31.0, 31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, 35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0]
bream_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 570.0, 685.0, 620.0, 680.0, 700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0]

print(len(bream_length))
print(len(bream_weight))

plt.scatter(bream_length, bream_weight)
plt.xlabel('length')
plt.ylabel('weight')
plt.show()

"""2. 도미 + 빙어 데이터"""

smelt_length = [9.8, 10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]
smelt_weight = [6.7, 7.5, 7.0, 9.7, 9.8, 8.9, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]

plt.scatter(bream_length, bream_weight)
plt.scatter(smelt_length, smelt_weight)
plt.xlabel('length')
plt.ylabel('weight')
plt.show()

"""3. 도미와 빙어 데이터 합치기"""

length = bream_length + smelt_length
weight = bream_weight + smelt_weight

# 리스트 내포
fish_data = [[i, j] for i, j in zip(length, weight)]

# 정답 준비 - 도미 빙어 구분 필요(지도학습)
fish_target = [1]*35 + [0]*14

"""4. k-최근접 이웃"""

from sklearn.neighbors import KNeighborsClassifier

# 클래스 인스턴스 객체 생성
kn = KNeighborsClassifier()
# 머신러닝 모델
kn.fit(fish_data, fish_target)
# 정확도 측정(0.0 ~ 1.0)
kn.score(fish_data, fish_target)

"""5. 새로운 생선 예측"""

kn.predict([[30, 600]]) #도미로 예측됨

"""6. 무조건 도미로 예측"""

kn49 = KNeighborsClassifier(n_neighbors = 49)

kn49.fit(fish_data, fish_target)
kn49.score(fish_data, fish_target)

print(35/49)